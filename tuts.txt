git cloned django-react-boilerplate  from my repo and DJecommerce from just django's repo
made a virtualenv env and activated it
openeD two terminals -1 for python other for node
pip installed -r requirements.txt   ||  npm i
python manage.py runserver          ||  npm run start
copy pasteD item from react semantic ui to ProductList container and converted it to a class based component exported it
in routes.js imported it and made a route to display it
python manage.py migrate and createdsuperuser
added link to ProductList in layout.js
made a constants.js file in src
copy pasted core folder from django-ecomm to our dir
deleted migrations in core , added  core to base.py installed apps , pip installed all those dependecies we dont have installed
then python manage.py makemigrations core
inside core made a new folder api and a views.py in it and a serializers.py ,urls.py {mapped the api view to url}
then modified the home/urls.py otherwise image wont load 500 error

then made the add-to-cart api view and then mapped it in urls.py
made a constants url for that and brought that into ProductList
 made  a utils.js in src to have authAxios
then made a cart.js in actions and cart.js in reducers  and imported cartReducer in index.js and combinedreducer as cart
in layout.js modified mapStateToProps and render
made the order serializer and orderitem serializer then made the orderdetial view mappedit
then modified constants,cart.js(both),layout.js,ProductList.js an addtocart working now

made a container ordersummary , brought it to routes.js modified serializers
modified layout.js for displaying logout cart after logged in

npm i --save react-stripe-elements 
added this "<script src="https://js.stripe.com/v3/"></script>" to index.html
made a checkout.js
made a paymentview class api
made a constants for checkout url
pip installed stripe,python-decouple
made a .env file and stored our public and secret key init
then in dev.py from decouple imported config and pasted this->
                        STRIPE_PUBLIC_KEY = config("STRIPE_TEST_PUBLIC_KEY")
                        STRIPE_SECRET_KEY = config("STRIPE_TEST_SECRET_KEY")
in views.py ->stripe.api_key = settings.STRIPE_SECRET_KEY
then modified checkout.js and views.py api